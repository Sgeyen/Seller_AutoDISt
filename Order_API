import requests
import json
import time
import schedule
import os

# SellerChamp API Endpoint
SELLERCHAMP_URL = "http://api.sellerchamp.com/orders"
SELLERCHAMP_API_KEY = os.getenv("SELLERCHAMP_API_KEY")

# AutoDist API Endpoint
AUTODIST_URL = "https://api.autodist.com/gateway/orders"
AUTODIST_API_KEY = os.getenv("AUTODIST_API_KEY")

# Function to fetch new orders from SellerChamp
def fetch_orders():
    headers = {"Authorization": f"Bearer {SELLERCHAMP_API_KEY}"}
    response = requests.get(SELLERCHAMP_URL, headers=headers)
    
    if response.status_code == 200:
        return response.json()
    else:
        print(f"Error fetching orders: {response.status_code} {response.text}")
        return []

# Function to push orders to AutoDist
def push_orders(orders):
    headers = {
        "Authorization": f"Bearer {AUTODIST_API_KEY}",
        "Content-Type": "application/json"
    }
    
    for order in orders:
        order_payload = {
            "order_id": order["id"],
            "items": order["items"],
            "shipping_address": order["shipping_address"]
        }
        response = requests.post(AUTODIST_URL, headers=headers, json=order_payload)
        
        if response.status_code == 201:
            print(f"Order {order['id']} successfully pushed to AutoDist")
        else:
            print(f"Failed to push order {order['id']}: {response.status_code} {response.text}")

# Scheduled task to run every 15 minutes
def job():
    print("Checking for new orders...")
    orders = fetch_orders()
    if orders:
        push_orders(orders)
    else:
        print("No new orders found.")

schedule.every(15).minutes.do(job)

# Continuous loop for local execution
if __name__ == "__main__":
    while True:
        schedule.run_pending()
        time.sleep(60)
